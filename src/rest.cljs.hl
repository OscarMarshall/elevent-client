(ns rest
  (:require
    [ajax.core :refer [DELETE GET POST PUT]]
    [datascript :as d]

    [app]))

(defn endpoint* [uri element-id state]
  (fn dispatch!
    ([operation params handler error-handler]
     (let [options {:format
                    :json

                    :response-format
                    (when (= operation :read) :json)

                    :keywords?
                    true

                    :headers
                    (if @app/token
                      {:Authentication
                       (str "Bearer " @app/token)}
                      {})

                    :params
                    (when (or (= operation :create)
                              (= operation :update))
                      params)

                    :handler
                    (if (= operation :read)
                      #(do
                         (js/console.log (prn-str %))
                         (reset! state %)
                         (when handler (handler %)))
                      #(do
                         (when handler (handler %))
                         (dispatch! :read nil nil nil)))

                    :error-handler
                    error-handler}]
       (let [check-id (fn [op] (if (contains? params element-id)
                                 (op (str uri "/" (params element-id)) options)
                                 (throw (str "Element doesn't contain key \""
                                             (prn-str element-id)
                                             "\": "
                                             (prn-str params)))))]
         (case operation
           :create (POST uri options)
           :read   (GET  uri options)
           :update (check-id PUT)
           :delete (check-id DELETE)
           (POST (str uri "/" (name operation)) options)))))
    ([operation params handler]
     (dispatch! operation params handler #(throw (prn-str %))))))
