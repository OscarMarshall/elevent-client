(ns elements)

(defelem input-cell [{:keys [type state options] :as attr} _]
  (case type
    "textarea"
    (textarea (assoc (dissoc attr :state)
                :value @state
                :on-input #(reset! state @%)))

    "select"
    (select (assoc (dissoc attr :state :options)
              :value @state
              :on-input #(reset! state @%))
      (loop-tpl :bindings [[name value] options]
        (option :value value
          name)))

    (input (assoc (dissoc attr :state)
             :value @state
             :on-input #(reset! state @%)))))

(defelem input-field [{:keys [class field form-data] :as attr} [label input]]
  ((div (dissoc attr :field :form-data))
   :class (cell= {:error (not (empty? (field app/validation-errors)))})
   label
   (input :on-blur #(app/validate! field form-data))
   (loop-tpl :bindings [error-message (cell= (field app/validation-errors))]
     (div :class "ui red pointing prompt label" (text "~{error-message}")))))

(defelem submit [{:keys [class on-click form-data] :as attr} children]
  ((div (dissoc attr :form-data))
   :class (cell= {:disabled (not (empty? (app/validator form-data)))})
   children))

