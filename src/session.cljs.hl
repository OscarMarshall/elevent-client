(ns session
  (:require
    [tailrecursion.hoplon.storage-atom :refer [local-storage]]
    [page]
    [resources]
    [elements :refer [input-cell]]
    [ajax.core :refer [GET POST]]
    [goog.crypt.base64 :as b64]))

(def user (local-storage (cell nil) ::user))
; Run once to sync info.
(when @user
  (.getJSON js/jQuery
            (str page/api-base-url "/users/" (:UserId @user))
            (fn [json] (reset! user (js->clj json :keywordize-keys true)))))

(defc token nil)

(defn set-user!
  ([email]
   (GET (str page/api-base-url "/users?email=" email)
        {:response-format :json
         :keywords? true
         :handler (fn [json]
                    (reset! user (js->clj json :keywordize-keys true))
                    (set! (.-location js/window) "/#/events"))})))

(defn login!
  ([email password]
   (let [auth-string (b64/encodeString (str email ":" password))]
     (resources/api-get-secure "/token"
          {:auth-string auth-string
           :error-handler #(.log js/console "failed")
           :handler (fn [json]
                      (do
                        (reset! token (:Token (js->clj json)))
                        (set-user! email)))})))
  ; HACK: Because we shouldn't sign people in by user-id
  ([user-id]
   (.getJSON js/jQuery
             (str page/api-base-url "/users/" user-id)
             (fn [json]
               (reset! user (js->clj json :keywordize-keys true))))))

(defn logout! []
  (reset! user nil)
  (set! (.-location js/window) "/#"))

(defn control [attr]
  (cell=
    (if user
      (a (assoc attr :on-click logout!)
        (text "Logout of ~{(:FirstName user)}'s account"))
      (let [email    (cell nil)
            password (cell nil)]
        (a (assoc attr
             :on-click #(.modal (js/jQuery ".ui.login.modal") "show"))
          (i :class "user icon")
          "Login"
          (form :class "ui small login modal"
                :on-submit (fn []
                             (login! @email @password)
                             false)
            (i :class "close icon")
            (div :class "header"
              "Login")
            (div :class "content"
              (div :class "description"
                (div :class "ui form"
                  (div :class "two fields"
                    (div :class "field"
                      (label "Email")
                      (input-cell :type "email" :state email))
                    (div :class "field"
                      (label "Password")
                      (input-cell :type "password" :state password))))))
            (div :class "actions"
              (button :class "ui button" "Cancel")
              (input :type "submit" :class "ui button primary"
                "Login"))))))))
