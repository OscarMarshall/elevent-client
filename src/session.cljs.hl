(ns session
  (:require
    [tailrecursion.hoplon.storage-atom :refer [local-storage]]
    [elements :refer [input-cell]]
    [ajax.core :refer [GET POST]]
    [goog.crypt.base64 :as b64]))

(def user (local-storage (cell nil) ::user))
; Run once to sync info.
(when @user
  (resources/api-get (str "/users/" (:UserId @user))
                     {:handler (fn [json]
                                 (reset! user json))}))

(defn set-user!
  ([email]
   (resources/api-get (str "/users?email=" email)
                      {:handler (fn [json]
                                  (reset! user json)
                                  (set! js/location "#/events"))})))

(defn login!
  ([email password]
   (let [auth-string (b64/encodeString (str email ":" password))]
     (resources/api-get-secure "/token"
          {:auth-string auth-string
           :error-handler #(.log js/console "failed")
           :handler (fn [json]
                      (do
                        (reset! resources/token (:Token json))
                        (.log js/console @resources/token)
                        (set-user! email)))})))
  ; HACK: Because we shouldn't sign people in by user-id
  ([user-id]
   (resources/api-get (str "/users" user-id)
                      {:handler (fn [json]
                                  (do
                                    (reset! user (js->clj json :keywordize-keys true))
                                    (set! js/location "#/")))})))

(defn logout! []
  (reset! user nil)
  (set! js/location "#/"))

(defn control [attr]
  (cell=
    (if user
      (a (assoc attr :on-click logout!)
        (text "Logout of ~{(:FirstName user)}'s account"))
      (let [email    (cell nil)
            password (cell nil)]
        (div
          (a (assoc attr
               :on-click #(.modal (js/jQuery ".ui.login.modal") "show"))
            (i :class "user icon")
            "Login"
            (form :class "ui small login modal"
                  :on-submit (fn []
                               (login! @email @password)
                               false)
              (i :class "close icon")
              (div :class "header"
                "Login")
              (div :class "content"
                (div :class "description"
                  (div :class "ui form"
                    (div :class "two fields"
                      (div :class "field"
                        (label "Email")
                        (input-cell :type "email" :state email))
                      (div :class "field"
                        (label "Password")
                        (input-cell :type "password" :state password))))))
              (div :class "actions"
                (button :class "ui button" "Cancel")
                (input :type "submit" :class "ui button primary"
                  "Login"))))
          (a :class "item right floated" :href "#/register"
            "Sign up"))))))
