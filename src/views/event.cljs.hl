(ns views.event
  (:require [secretary.core :as secretary :refer-macros [defroute]]
    [cljs-time.coerce :refer [from-string]]
    [cljs-time.format :refer [unparse]]
    [cljs-time.core :refer [after? at-midnight]]
    [datascript :as d]

    [resources]
    [session]
    [util :refer [date-formatter datetime-formatter]]))

(defc event-id nil)
(defc= event (when event-id
               (let [entity (d/entity resources/events-db event-id)]
                 (when (seq entity)
                   entity))))

(def breadcrumbs (list [(cell= (if app/token
                                 "Events"
                                 "Explore"))
                        (cell= (if app/token
                                 "#/events"
                                 "#/explore"))]
                       (cell= (:Name event))))

(defn template []
  (div :class "ui page grid"
    (div :class "sixteen wide column"
      (div :class "ui segment"
        (div :class "ui vertical segment"
          (h2 :class "ui dividing header"
            (text (:Name event)))
          (div :class "ui right floated small labeled icon button"
            (i :class "edit icon")
            "Edit")
          (div
            (b "Venue: ") (text (:Venue event)))
          (div
            (b "Date: ") (text
                           (when event
                             (let [start (from-string (:StartDate event))
                                   end   (from-string (:EndDate   event))]
                               (str (unparse date-formatter start)
                                    (when (after? end start)
                                      (str " to "
                                           (unparse date-formatter end))))))))
          (p
            (text (:Description event))))
        (div :class "ui vertical segment"
          (h2 :class "ui header"
            "Activities"
            (a :href (cell= (str "#/events"
                                 "/" (:EventId event)
                                 "/activities"
                                 "/add"))
               :class "ui right floated small button"
              "View/Edit"))
          (table :class "ui table"
            (thead
              (tr
                (th "Start")
                (th "End")
                (th "Activity")
                (th "Location")))
            (tbody
              (loop-tpl :bindings [activity
                                   (cell=
                                     (map #(d/entity resources/activities-db %)
                                          (d/q '[:find [?e ...]
                                                 :in $ ?event-id
                                                 :where
                                                 [?e :EventId ?event-id]]
                                               resources/activities-db
                                               event-id)))]
              (tr
                (td :nowrap true
                  (cell= (unparse datetime-formatter
                                  (from-string (:StartTime activity)))))
                (td :nowrap true
                  (cell= (unparse datetime-formatter
                                  (from-string (:EndTime activity)))))
                (td (text (:Name activity)))
                (td (text (:Location activity))))))
            (tfoot
              (tr
                (th :colspan "4"
                  (cell=
                    (a :class "ui right floated small labeled icon button"
                      :href (str "#/events/" (:EventId event) "/activities/add")
                      (i :class "edit icon")
                      "Edit")))))))
        #_(div :class "ui vertical segment"
          (h2 :class "ui header" "Groups")
          (table :class "ui table"
            (thead
              (tr
                (th "Name")
                (th "Members")))
            (tbody
              (tr
                (td "Red")
                (td "20")))
            (tfoot
              (tr
                (th :colspan "4"
                  (div :class "ui right floated small labeled icon button"
                       (i :class "edit icon")
                       "Edit"))))))
        (div :class "ui vertical segment"
          (h2 :class "ui header"
            "Attendees"
            (a :href (cell= (str "#/events/" (:EventId event) "/attendees"))
               :class "ui right floated small button"
              "View"))
          (table :class "ui table"
            (thead
              (tr
                (th "Name")
                (th "Location")
                (th)))
            (tbody
              (loop-tpl :bindings
                        [attendee
                         (cell=
                           (take 10
                                 (sort-by (juxt :HighSchool
                                                :LastName
                                                :FirstName)
                                          (map (fn [[user-id attendee-id]]
                                                 (merge
                                                   (into
                                                     {}
                                                     (d/entity
                                                       resources/users-db
                                                       user-id))
                                                   (into
                                                     {}
                                                     (d/entity
                                                       resources/attendees-db
                                                       attendee-id))))
                                               (d/q '[:find ?e ?a
                                                      :in $ ?event-id
                                                      :where
                                                      [?a :EventId ?event-id]
                                                      [?a :UserId ?e]]
                                                    resources/attendees-db
                                                    event-id)))))]
                (tr
                  (td (text "~(:FirstName attendee) ~(:LastName attendee)"))
                  (td "WEB 2230")
                  (td (a :class (str "ui right floated small labeled button")
                         :href (cell= (str "#/events/" event-id "/attendees/" (:AttendeeId attendee) "/checkin"))
                        (cell= (if (:CheckinTime attendee)
                                 "Checked in"
                                 "Check in")))))))
            (tfoot
              (tr
                (th :colspan "4"
                  (div :class "ui right floated small labeled icon button"
                    (i :class "edit icon")
                    "Edit"))))))))))

(defroute "/events/:EventId" [EventId]
  (reset! app/breadcrumbs breadcrumbs)
  (reset! event-id (int EventId))
  (template))
