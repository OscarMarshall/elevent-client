(ns views.event
  (:require [secretary.core :as secretary :refer-macros [defroute]]
    [cljs-time.coerce :refer [from-string]]
    [cljs-time.format :refer [unparse]]
    [datascript :as d]

    [resources]
    [session]
    [util :refer [datetime-formatter]]))

(defc event-id nil)
(defc= event {})

(def breadcrumbs (list [(cell= (if session/user
                                 "Events"
                                 "Explore"))
                        (cell= (if session/user
                                 "#/events"
                                 "#/explore"))]
                       (cell= (:Name event))))

(defn template []
  (div :class "ui page grid"
    (div :class "twelve wide column"
      (div :class "ui segment"
        (div :class "ui vertical segment"
          (h2 :class "ui dividing header"
              (cell= (:Name event)))
          (div :class "ui right floated small labeled icon button"
            (i :class "edit icon")
            "Edit")
          (div
            (b "Venue: ") (text "~(:Venue event)"))
          (div
            (b "Date: ") "11/05/2014")
          (p
            (text "~(:Description event)")))
        (div :class "ui vertical segment"
          (h2 :class "ui header"
              "Schedule")
          (table :class "ui table"
            (thead
              (tr
                (th "Start")
                (th "End")
                (th "Activity")
                (th "Location")))
            (tbody
              (loop-tpl :bindings [activity
                                   (cell=
                                     (d/entity resources/activities-db
                                               (d/q '[:find ?activity-id
                                                      :where
                                                      [?activity-id]]
                                                    resources/activities-db)))]
              (tr
                (let [start (from-string (:StartTime @activity))]
                  (td :nowrap true (unparse datetime-formatter start)))
                (let [end (from-string (:EndTime @activity))]
                  (td :nowrap true (unparse datetime-formatter end)))
                (td (text (:Name activity)))
                (td (text (:Location activity))))))
            (tfoot
              (tr
                (th :colspan "4"
                  (cell=
                    (a :class "ui right floated small labeled icon button"
                      :href (str "#/events/" (:EventId event) "/activities/add")
                      (i :class "edit icon")
                      "Edit")
                    (div :class "ui small labeled icon button"
                      (i :class "print icon")
                      "Print")))))))
        #_(div :class "ui vertical segment"
          (h2 :class "ui header" "Groups")
          (table :class "ui table"
            (thead
              (tr
                (th "Name")
                (th "Members")))
            (tbody
              (tr
                (td "Red")
                (td "20")))
            (tfoot
              (tr
                (th :colspan "4"
                  (div :class "ui right floated small labeled icon button"
                       (i :class "edit icon")
                       "Edit"))))))
        (div :class "ui vertical segment"
          (h2 :class "ui header"
              "Attendees")
          (table :class "ui table"
            (thead
              (tr
                (th "Name")
                (th "Location")))
            (tbody
              (tr
                (td "Leslie Baker")
                (td "WEB 2230")))
            (tfoot
              (tr
                (th :colspan "4"
                  (div :class "ui right floated small labeled icon button"
                    (i :class "edit icon")
                    "Edit"))))))))))

(defroute "/events/:EventId" [EventId]
  (reset! app/breadcrumbs breadcrumbs)
  (reset! event-id (int EventId))
  (template))
