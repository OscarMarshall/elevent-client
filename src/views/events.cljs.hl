(ns views.events
  (:require
    [secretary.core :as secretary :refer-macros [defroute]]
    [cljs-time.core :refer [after? at-midnight]]
    [cljs-time.coerce :refer [from-string]]
    [cljs-time.format :refer [unparse]]
    [util :refer [date-formatter]]
    [page]
    [resources]
    [session]))

(def template
  (div :class "ui page grid"
    (div :class "sixteen wide column"
      (div :class "ui segment"
        (div
          (div :class "ui vertical segment"
            (h1 :class "ui header"
              "Upcoming Events"
              (a :href "#/events/add"
                 :class "ui right floated small button"
                "Add Event")))
          (div :class "ui vertical segment"
            (div :class "ui divided items"
              (loop-tpl :bindings [event
                                   (cell=
                                     (map resources/events
                                          (keys
                                            (get resources/attendees
                                                 (:UserId session/user)))))]
                (div :class "item"
                  (div :class "content"
                    (a :class "header" :href (str "#/events/" (:EventId @event))
                      (text "~{(:Name event)}"))
                    (div :class "meta"
                      (b "Date: ")
                      (let [start (from-string (:StartDate @event))
                            end   (from-string (:EndDate   @event))]
                        (str (unparse date-formatter start)
                             (when (after? end start)
                               (str " to " (unparse date-formatter end))))))
                    (div :class "description"
                      (text "~{(:Description event)}"))
                    (div :class "extra"
                      (a :class "ui right floated button" :href (str "#/events/" (:EventId @event) "/schedule")
                        "Schedule"
                        (i :class "right chevron icon")))))))))
        (div :do-class (cell= {:ui true
                               :active (empty? resources/events)
                               :dimmer true})
          (div :class "ui loader"))))))

(defroute events "/events" []
  (if @session/user
    (do
      (reset! page/breadcrumbs (list "Events"))
      template)
    (set! js/location "#/")))
