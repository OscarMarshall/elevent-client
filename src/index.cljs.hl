(page "index.html"
  (:require
    [clojure.string :refer [split]]
    [tailrecursion.hoplon.reload :refer [reload-all]]
    [secretary.core :as secretary]
    [page]
    [style :refer [stylesheet]]
    [session]
    [resources]
    [views.events]
    [views.event-add]))

(reload-all)

(secretary/set-config! :prefix "#")

(html
  (head
    (title page/title-string)
    (meta :Name "viewport" :content "width=device-width, initial-scale=1.0")
    (style stylesheet))
  (body
    (nav :class "ui fixed menu"
      (a :class "logo item" :href "#"
        (img :src "images/logo-menu.png"))
      (a :class "item" :href "#/events"
        (i :class "ticket icon") "Events")
      (a :class "item" :href "#/organizations"
         (i :class "building icon") "Organizations")
      (a :class "item" :href "#/events/asian-american-student-association/university-of-utah-asian-american-high-school-conference-2015/schedule"
        (i :class "clock icon") "Schedule")
      (a :class "item" :href "#/calendar"
        (i :class "calendar icon") "Calendar")
      (a :class "item" :href "#/statistics"
        (i :class "bar chart icon") "Statistics")
      (div :class "right menu"
        (session/control {:class "item"})))
    (div :class "ui page grid"
      (div :class "sixteen wide column"
        (div :class "ui breadcrumb"
          (a :class "section" :href "/"
            "Home")
          (loop-tpl :bindings [breadcrumb page/breadcrumbs]
            (span
              (div :class "divider" " / ")
              (span
                (cell=
                  (if (vector? breadcrumb)
                    (let [[text url] breadcrumb]
                      (a :class "section" :href url
                        text))
                    (div :class "active section"
                      breadcrumb)))))))))
    (div (cell= (secretary/dispatch! page/route)))))
