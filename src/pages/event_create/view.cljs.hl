(ns pages.event-create.view
  (:require
    [util :refer [input-cell textarea-cell]]
    [cljs-time.core :refer  [now]]
    [cljs-time.coerce :refer [from-string]]
    [cljs-time.format :refer [formatters unparse]]))

(defc event-title nil)
(defc organization nil)
(defc venue nil)
(defc start-date (unparse (:date formatters) (now)))
(defc end-date   (unparse (:date formatters) (now)))
(defc description nil)
(defc= form-data
  {:Name event-title
   :StartDate (unparse (:basic-date-time formatters) (from-string start-date))
   :EndDate   (unparse (:basic-date-time formatters) (from-string end-date))
   :Description description})

(def api-base-url "http://elevent.solutions:8860")

(defn create-event [form-data reset-events]
  (let [new-event (clj->js (assoc form-data :Organization (int (.val (js/jQuery "#event-organization")))))]
    (.post js/jQuery
           (str api-base-url
                "/events")
           new-event
           (reset-events new-event)
           "json")))

(-> js/document js/jQuery (.ready #(-> (js/jQuery "select.dropdown") (.dropdown))))

(defn template [organizations reset-events]
  (div :class "ui stackable page grid"
    (div :class "twelve wide column"
      (div :class "ui segment"
        (div :class "ui form"
          (div :class "ui vertical segment"
            (h2 :class "ui dividing header"
              "Create an Event")
            (div :class "two fields"
              (div :class "required field"
                (label "Title")
                (input-cell :type "text" :state event-title))
              (div :class "field"
                (label "Clone From")
                (select :class "ui"
                  (option :value "" "None")))))
          (div :class "ui vertical segment"
            (div :class "two fields"
              (div :class "required field"
                (label "Organization")
                (select :class "ui" :id "event-organization"
                  (loop-tpl :bindings [organization organizations]
                    (option :value (:OrganizationId @organization) (:Name @organization)))))
              (div :class "required field"
                (label "Venue")
                (input-cell :type "text" :state venue)))
            (div :class "two fields"
              (div :class "required field"
                (label "Start Date")
                (input-cell :type "date" :state start-date))
              (div :class "required field"
                (label "End Date")
                (input-cell :type "date" :state end-date)))
            (div :class "field"
              (label "Description")
              (textarea-cell :state description))
            (div :class "ui primary button" :on-click #(create-event @form-data reset-events)
              "Create")))))
    (div :class "four wide column"
        (div :class "ui fluid card"
          (div :class "image"
            (img :src "images/logo-image-floating.jpg"))
          (div :class "extra content"
            (a
              "Powered by Elevent"))))))
